#!/usr/bin/ruby
#charset: utf-8

#
# Copyright (c) 2012 Olivier Amblet<olivier@amblet.net>
# 
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#

require 'rctl'
require 'rctl/version'
require 'optparse'

ctl = Rctl::Ctl.new
server_switch = []
usage = false
options = {}


parser = OptionParser.new do |opt|
  opt.banner = "Usage: rctl COMMAND [OPTIONS]"
  opt.separator ""
  opt.separator "Commands"
  opt.separator "    start   start server(s)"
  opt.separator "    stop    stop server(s)"
  opt.separator ""
  opt.separator "Options"

  opt.on("-a", "--all", "do COMMAND on all servers (by default)") { server_switch = ctl.commands.keys }

  ctl.commands.each do |name, args|
    opt.on("-#{args['short']}", "--#{name.to_s}", "do COMMAND on #{name.to_s} server") do
      server_switch.push name
    end
  end

  opt.on "-c CONFIG_FILE", "--config", "Read an alternate YAML configuration file (default is created in ~/.rctl.rc.yaml)." do |f|
    options[:config] = File.expand_path(f)
  end
  
  opt.on("-v", "--version", "display version information") do
    puts "Rctl CTL version #{Rctl::CtlVersion::VERSION}"
    exit
  end
  
  opt.on("-h", "--help", "display this help message") do
    usage = true
  end
end
parser.parse!

if usage || !ARGV[0] || ARGV[0] == 'help'
  puts parser
else
  server_switch = ctl.commands.keys if server_switch.empty?
  exec ctl.generate(ARGV[0], server_switch)
end